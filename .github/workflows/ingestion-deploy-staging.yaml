name: Ingestion Deploy (staging)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "src/profitscout_ingestion/**"
      - "Dockerfile"
      - ".github/workflows/ingestion-deploy-staging.yaml"
      - ".github/workflows/ingestion-build.yaml"
      - ".dockerignore"
      - "deploy/**"

env:
  IMAGE_NAME: ingestion
  SERVICE_DEFAULT: profitscout-ingestion-staging

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # needed for Workload Identity Federation

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
      SERVICE_NAME: ${{ vars.INGESTION_SERVICE }}
      WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
      WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Choose auth method: WIF preferred; fall back to SA key if provided
      - name: Auth (Workload Identity Federation)
        if: ${{ env.WIF_PROVIDER != '' && env.WIF_SERVICE_ACCOUNT != '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Auth (Service Account Key)
        if: ${{ (env.WIF_PROVIDER == '' || env.WIF_SERVICE_ACCOUNT == '') && env.GCP_SA_KEY != '' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}

      - name: Set default SERVICE_NAME if not defined
        run: |
          if [ -z "${SERVICE_NAME}" ]; then
            echo "SERVICE_NAME=${SERVICE_DEFAULT}" >> $GITHUB_ENV
          else
            echo "SERVICE_NAME=${SERVICE_NAME}" >> $GITHUB_ENV
          fi

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Artifact Registry auth
        run: gcloud auth configure-docker "${REGION}-docker.pkg.dev" --quiet

      - name: Compute image tags
        id: meta
        run: |
          echo "IMAGE_URI=${REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "IMAGE_URI_STAGE=${REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPOSITORY}/${IMAGE_NAME}:staging" >> $GITHUB_OUTPUT

      - name: Build & Push (Artifact Registry)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE_URI }}
            ${{ steps.meta.outputs.IMAGE_URI_STAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run (staging)
        run: |
          gcloud run deploy "${SERVICE_NAME}"             --image "${{ steps.meta.outputs.IMAGE_URI }}"             --project "${PROJECT_ID}"             --region "${REGION}"             --platform managed             --cpu=1 --memory=512Mi --concurrency=10             --min-instances=0 --max-instances=3             --no-allow-unauthenticated             --set-env-vars-file deploy/ingestion.staging.env.example             --quiet

      # (Optional) Bind Secret Manager secrets here in later PRs, e.g.:
      # gcloud run services update "${SERVICE_NAME}"       #   --region "${REGION}"       #   --set-secrets FMP_API_KEY=fmp_api_key:latest

      - name: Show service URL
        run: |
          URL=$(gcloud run services describe "${SERVICE_NAME}" --region "${REGION}" --format='value(status.url)')
          echo "Staging service URL: ${URL}"
